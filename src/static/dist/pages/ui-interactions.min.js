updateDynamicContent();let mymap=L.map("mapid").setView([52.231,21.004],7);const lightTileLayer=L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="www.openstreetmap.org/copyright">OpenStreetMap contributors</a>'}).addTo(mymap),darkTileLayer=L.tileLayer("https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png",{attribution:'&copy; <a href="https://www.stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}),greenIcon=new L.Icon({iconUrl:"static/css/images/marker-icon-green.png",shadowUrl:"static/css/images/marker-shadow.png",iconSize:[25,41],iconAnchor:[12,41],popupAnchor:[1,-34],shadowSize:[41,41]}),providerColors={"P4 Sp. z o.o.":"violet","Orange Polska S.A.":"orange","T-Mobile Polska S.A.":"red","POLKOMTEL Sp. z o.o.":"blue","AERO 2 Sp. z o.o.":"blue"},initialFilters=()=>({lat:null,lng:null,limit:null,maxDistance:null,serviceProvider:[],frequencyBands:[],mode:"all"});let locationSetInitially=!1,currentFilters=initialFilters(),stationMarkers=[],marker,userSubmittedLocation=null,countryBoundaries,isFirstClick=!0,currentBand="low";const frequencyRanges={high:[200,500,1e3,1500],mid:[300,750,1500,2e3],low:[500,1500,3e3,5e3]},frequencyRangecolors=["green","yellow","orange","red"];function setupTouchInteraction(e){let t=!1;var n=()=>t=!0;e.on("touchstart",n),e.on("touchmove",n),e.on("touchend",()=>setTimeout(()=>t=!1,500)),e.on("click",function(e){t&&e.originalEvent.preventDefault()}),e.doubleClickZoom.disable()}window.onload=hideSidebar,globalFetch("/static/PL-administrative-boundaries.json").then(e=>{countryBoundaries=L.geoJson(e,{style:function(e){return{fillColor:"transparent",fill:!1,color:"#4a90e2",weight:2}}}).addTo(mymap)}),mymap.on("click",function(e){var e=e.latlng,t=e.lat,e=e.lng;marker&&mymap.removeLayer(marker),marker=L.marker([t,e],{icon:greenIcon}).addTo(mymap),currentFilters.lat=t,currentFilters.lng=e,isFirstClick?(sendLocation(t,e),isFirstClick=!1):fetchStations()}),setupTouchInteraction(mymap);let gpsButton=L.control({position:"topleft"}),frequencyRangeLegend=(gpsButton.onAdd=function(e){var t=L.DomUtil.create("div","gps-location-control");return t.innerHTML='<button id="useMyLocationBtn" title="Use My Location">üìç</button>',L.DomEvent.on(t,"click",function(e){L.DomEvent.stop(e),requestAndSendGPSLocation()}),t},gpsButton.addTo(mymap),L.control({position:"topleft"})),btsCountControl=(frequencyRangeLegend.onAdd=function(e){let o=L.DomUtil.create("div","gps-location-control");o.style.cursor="grab",o.style.userSelect="none",o.style.position="absolute",o.style.top="112px",o.style.left="0px";var t=L.DomUtil.create("button","",o);t.id="toggleFrequencyRangeLegendBtn",t.title="Frequency Range Distance Legend",t.innerHTML='<span class="text-green-500" style="position: relative; transform: scale(2.5); display: inline-block; vertical-align: middle;">&#x25CB;</span>';let n=L.DomUtil.create("div","frequency-range-container hidden bg-white p-1 rounded shadow text-black dark:bg-black dark:text-white w-76 accent-blue-500 dark:accent-gray-400",o),i=(n.innerHTML=`
            <table class="frequency-table min-w-full divide-y divide-gray-200">
                <thead class="text-gray-700 font-bold dark:text-white">
                    <tr>
                        <th>Signal Strength</th>
                        <th class="column-high" onclick="changeFrequency('high')">High Band Frequency<br>(5G3600, L2600) (km)</th>
                        <th class="column-mid" onclick="changeFrequency('mid')">Mid Band Frequency <br>(5G/L2100, L1800) (km)</th>
                        <th class="column-low" onclick="changeFrequency('low')">Low Band Frequency<br>(L900, L800, G900) (km)</th>
                    </tr>
                </thead>
                <tbody class="text-gray-700 font-bold dark:text-white divide-y divide-gray-200">
                    <tr class="bg-green-600 dark:bg-green-700"><td>Excellent</td><td>0.2</td><td>0.3</td><td>0.5</td></tr>
                    <tr class="bg-yellow-300 dark:bg-yellow-400"><td>Good</td><td>0.5</td><td>0.75</td><td>1.5</td></tr>
                    <tr class="bg-orange-400 dark:bg-orange-400"><td>Fair</td><td>1.0</td><td>1.5</td><td>3.0</td></tr>
                    <tr class="bg-red-500 dark:bg-red-600"><td>Poor</td><td>1.5</td><td>2.0</td><td>5.0</td></tr>   
                </tbody>
            </table>
        `,L.DomEvent.on(t,"click",function(){n.classList.toggle("hidden")}),null);const a=function(e){var t,n,a,r;i&&(a=e.clientX-i.x,r=e.clientY-i.y,a=parseInt(o.style.left,10)+a,r=parseInt(o.style.top,10)+r,t=(n=mymap.getContainer()).offsetWidth-o.offsetWidth,n=n.offsetHeight-o.offsetHeight,a=Math.max(0,Math.min(a,t)),r=Math.max(0,Math.min(r,n)),o.style.left=a+"px",o.style.top=r+"px",i={x:e.clientX,y:e.clientY})},r=function(){document.removeEventListener("mousemove",a),document.removeEventListener("mouseup",r),o.style.cursor="grab"};return L.DomEvent.on(o,"mousedown",function(e){i={x:e.clientX,y:e.clientY},o.style.cursor="grabbing",document.addEventListener("mousemove",a),document.addEventListener("mouseup",r)}),L.DomEvent.disableClickPropagation(o),L.DomEvent.on(o,"mousewheel",L.DomEvent.stopPropagation),o},frequencyRangeLegend.addTo(mymap),L.control({position:"bottomleft"})),filterControl=(btsCountControl.onAdd=function(e){var t=L.DomUtil.create("div","");return t.className="bg-white p-2 dark:mt-[-4.5rem] dark:md:mt-0 rounded shadow text-black dark:bg-gray-800 dark:hover:bg-gray-500 dark:text-white",t.innerHTML='BTS count: <span id="btsCounter">0</span>',t},btsCountControl.addTo(mymap),L.control({position:"topright"}));function requestAndSendGPSLocation(){mymap.locate({setView:!0,maxZoom:7,enableHighAccuracy:!0,timeout:1e4,maximumAge:0}),mymap.on("locationfound",function(e){var t=e.latlng.lat,e=e.latlng.lng;gpsMarker=L.marker([t,e],{icon:greenIcon}).addTo(mymap).bindPopup("Your Location").openPopup(),sendLocation(t,e)}),mymap.on("locationerror",function(e){e.message.includes("denied")?showToast("Location permission was denied. Please enable it to use this feature.","error"):e.message.includes("unavailable")?showToast("Location information is currently unavailable.","error"):e.message.includes("timeout")?showToast("The request to get your location timed out. Please try again.","error"):showToast("An unknown location error occurred. "+e.message,"error")})}function checkAndSetInitialLocation(){var e;locationSetInitially||(e=mymap.getCenter(),currentFilters.lat=e.lat,currentFilters.lng=e.lng)}function updateBTSCount(e){var t=document.getElementById("btsCounter");t&&(t.textContent=e)}function clearBTSCount(e){document.getElementById("btsCounter").textContent=0}function sendLocation(t,n,e=9,a=null){currentFilters.lat=t,currentFilters.lng=n,currentFilters.limit=e,currentFilters.maxDistance=a,locationSetInitially=!0;const r={lat:t,lng:n};e={lat:t,lng:n,limit:e,max_distance:a};const o=document.getElementById("messageBox");globalFetch("/submit_location",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>{countryBoundaries.getBounds().contains(r)?o.classList.add("hidden"):(o.classList.remove("hidden"),setTimeout(()=>{o.classList.add("hidden"),mymap.zoomOut(4)},7700)),e&&Array.isArray(e.stations)&&(updateBTSCount(e.count),showSidebar(),displayStations(e.stations),addRingsForLocation(t,n),applyFrequencyColors())})}function showSidebar(){document.getElementById("sidebar").classList.remove("hidden")}function hideSidebar(){document.getElementById("sidebar").classList.add("hidden")}function clearStationMarkers(){for(let e=0;e<stationMarkers.length;e++)mymap.removeLayer(stationMarkers[e]);stationMarkers=[]}function displayStations(e){clearStationMarkers(),clearRings();let n=document.getElementById("sidebar");n.innerHTML="";let t,a=[];var r;Array.isArray(e)?t=e:e&&Array.isArray(e.stations)&&(t=e.stations),t.forEach((e,t)=>{addStationMarker(e,t),addStationInfoToSidebar(e,t,n);t=L.latLng(e.latitude,e.longitude);a.push(t)}),0<(e=a).length&&(e=L.latLngBounds(e),mymap.fitBounds(e,{padding:[50,50]}),(r=(e=mymap.getZoom())-1)<e)&&mymap.setZoom(r)}function createCustomIcon(e,t,n){return L.divIcon({html:`<div style="background-image: url(${n}); width: 30px; height: 46px; background-size: cover; position: relative;">
                        <div style="position: absolute; bottom: 1px; width: 100%; text-align: center; color: white; font-weight: bold; font-size: 21px;">
                            ${t+1}
                        </div>
                    </div>`,iconSize:[12,41],iconAnchor:[12,41],popupAnchor:[1,-34],className:""})}function addStationMarker(e,t){var n=createCustomIcon(e,t,`static/css/images/marker-icon-${providerColors[e.service_provider]}.png`||"grey"),n=L.marker([e.latitude,e.longitude],{icon:n}).addTo(mymap),a=applyFrequencyColorsToTooltipContent(createPopupContent(e,t)),a=(n.bindPopup(a),stationMarkers.push(n),t+1+". "+e.basestation_id);n.bindTooltip(a)}function addStationInfoToSidebar(e,t,n){var t=createSidebarContent(e,t),a=document.createElement("div"),t=(a.className="sidebar-item",a.innerHTML=t,n.appendChild(a),document.createElement("a"));t.href=`https://www.google.com/maps/search/?api=1&query=${e.latitude},`+e.longitude,t.target="_blank",t.textContent="View on Google Maps",t.className="no-underline hover:underline text-blue-500 hover:text-blue-700 dark:text-blue-300 dark:hover:text-blue-400 font-semibold",a.appendChild(t)}function createPopupContent(e,t){var n=e.latitude.toFixed(5),a=e.longitude.toFixed(5),r=e.distance.toFixed(2),o=0<=e.latitude?"N":"S",i=0<=e.longitude?"E":"W",l=`https://www.google.com/maps/search/?api=1&query=${e.latitude},`+e.longitude;return`
        <div class="bg-white dark:bg-gray-800 dark:text-white p-1 rounded-lg">
            <b>${t+1}. Service Provider:</b> ${e.service_provider}<br>
            <b>Distance:</b> ${r}km<br>
            <b>Base Station ID:</b> ${e.basestation_id}<br>
            <b>Frequency Bands:</b> ${e.frequency_bands.join(", ")}<br>
            <b>City:</b> ${e.city}<br>
            <b>Location:</b> ${e.location}<br>
            <b>Coordinates:</b> ${n}¬∞${o}, ${a}¬∞${i}<br>
            <a href="${l}" target="_blank" class="no-underline hover:underline text-blue-500 hover:text-blue-700 dark:text-blue-300 dark:hover:text-blue-400 font-semibold">View on Google Maps</a>
        </div>`}function createSidebarContent(e,t){var n=e.latitude.toFixed(5),a=e.longitude.toFixed(5),r=e.distance.toFixed(2),o=0<=e.latitude?"N":"S",i=0<=e.longitude?"E":"W";return`
        <div class="sidebar-item dark:text-white">
            <h4>${t+1}. ${e.basestation_id}</h4>
            <p><b>Service Provider:</b> ${e.service_provider}</p>
            <p><b>Distance:</b> ${r}km</p>
            <p><b>Frequency Bands:</b> ${e.frequency_bands.join(", ")}</p>
            <p><b>City:</b> ${e.city}</p>
            <p><b>Location:</b> ${e.location}</p>
            <p><b>Coordinates:</b> ${n}¬∞${o}, ${a}¬∞${i}</p>
        </div>`}function constructFilterURL(){let t=new URLSearchParams;return t.append("lat",currentFilters.lat),t.append("lng",currentFilters.lng),Array.isArray(currentFilters.serviceProvider)&&currentFilters.serviceProvider.forEach(e=>t.append("service_provider",e)),Array.isArray(currentFilters.frequencyBands)&&currentFilters.frequencyBands.forEach(e=>t.append("frequency_bands",e)),"nearest"===currentFilters.mode?void 0!==currentFilters.limit&&t.append("limit",currentFilters.limit):"withinDistance"===currentFilters.mode&&void 0!==currentFilters.maxDistance&&t.append("max_distance",currentFilters.maxDistance),"/stations?"+t.toString()}function fetchStations(){var e=constructFilterURL();globalFetch(e).then(e=>{e&&"object"==typeof e&&(locationSetInitially=!0,updateBTSCount(e.count),showSidebar(),displayStations(e.stations),currentFilters.lat&&currentFilters.lng&&addRingsForLocation(currentFilters.lat,currentFilters.lng),applyFrequencyColors())}).catch(e=>{})}function resetFiltersUI(){document.querySelectorAll('input[type="range"]').forEach(e=>{document.getElementById("nearestBtsRange").value=6,document.getElementById("withinDistanceRange").value=3,document.getElementById("nearestBtsValue").textContent=6,document.getElementById("withinDistanceValue").textContent=3}),document.querySelectorAll('input[type="checkbox"]').forEach(e=>{e.checked=!1});var e=mymap.getCenter();currentFilters={...initialFilters(),lat:e.lat,lng:e.lng}}function updateDynamicContent(){globalFetch("/session_check").then(e=>{var t=document.getElementById("dynamicContent"),e=e.logged_in;t.innerHTML=e?`
                <div id="latLngContainer" class="flex flex-col space-y-0.5">
                <button id="submitCoords" class="mt-2 w-48 bg-blue-300 dark:bg-gray-700 hover:bg-blue-500 dark:hover:bg-gray-500 text-white rounded">Search</button>
                    <div class="flex space-x-2">
                    <input type="number" id="latitudeInput" placeholder="52.230 (¬∞N)" class="w-[5.5rem] mt-0.5 bg-blue-100 hover:bg-blue-300 dark:bg-gray-700 dark:hover:bg-gray-500" min="48" max="58" step="0.1">
                    <input type="number" id="longitudeInput" placeholder="21.003 (¬∞E)" class="w-[5.5rem] mt-0.5 bg-blue-100 hover:bg-blue-300 dark:bg-gray-700 dark:hover:bg-gray-500" min="13.5" max="24.5" step="0.1">
                    </div>
                </div>
                <div id="searchByBtsContainer" class="mt-4 flex flex-col space-y-0.5">    
                    <button id="submitfilteredstation" class="w-48 bg-blue-300 dark:bg-gray-700 hover:bg-blue-500 dark:hover:bg-gray-500 text-white rounded">Search</button>
                    <div class="flex space-x-2">
                        <input type="text" id="baseStationIdInput" placeholder="Enter Base Station ID" class="w-[8rem] mt-0.5 bg-blue-100 hover:bg-blue-300 dark:bg-gray-700 dark:hover:bg-gray-500">
                    </div>
                </div>`:`
                <div id="latLngContainer" class="opacity-50 cursor-not-allowed flex flex-col space-y-0.5 title="Log in to use this feature.">
                    <button id="submitCoords" class="mt-2 w-48 bg-blue-300 dark:bg-gray-700 hover:bg-blue-500 dark:hover:bg-gray-500 text-white rounded cursor-not-allowed" disabled title="Log in to use this feature.">Search</button>
                    <div class="flex space-x-2">
                        <input type="number" id="latitudeInput" placeholder="52.230 (¬∞N)" class="w-[5.5rem] mt-0.5 bg-blue-100 hover:bg-blue-300 dark:bg-gray-700 dark:hover:bg-gray-500 cursor-not-allowed" min="48" max="58" step="0.1" disabled title="Log in to use this feature.">
                        <input type="number" id="longitudeInput" placeholder="21.003 (¬∞E)" class="w-[5.5rem] mt-0.5 bg-blue-100 hover:bg-blue-300 dark:bg-gray-700 dark:hover:bg-gray-500 cursor-not-allowed" min="13.5" max="24.5" step="0.1" disabled title="Log in to use this feature.">
                    </div>
                </div>
                <div id="searchByBtsContainer" class="mt-4 opacity-50 cursor-not-allowed flex flex-col space-y-0.5 title="Log in to use this feature.">
                    <button id="submitfilteredstation" class="w-48 bg-blue-300 dark:bg-gray-700 hover:bg-blue-500 dark:hover:bg-gray-500 text-white rounded cursor-not-allowed" disabled title="Log in to use this feature.">Search</button>
                    <div class="flex space-x-2">
                        <input type="text" id="baseStationIdInput" placeholder="Enter Base Station ID" class="w-[8rem] mt-0.5 bg-blue-100 hover:bg-blue-300 dark:bg-gray-700 dark:hover:bg-gray-500 cursor-not-allowed" disabled title="Log in to use this feature.">
                    </div>
                </div>`}).catch(e=>{})}function updateLatLngFilters(){var t=document.getElementById("latitudeInput"),n=document.getElementById("longitudeInput");if(t.value.trim()&&n.value.trim()){t=parseFloat(t.value),n=parseFloat(n.value);let e=!0;(isNaN(t)||t<48||58<t)&&(showToast("Latitude is out of range. Please enter a value between 48 and 58.","error"),e=!1),(isNaN(n)||n<13.5||24.5<n)&&(showToast("Longitude is out of range. Please enter a value between 13 and 25.","error"),e=!1),e&&(currentFilters.lat=t,currentFilters.lng=n,fetchStations())}else showToast("Both latitude and longitude must be filled out to proceed.","error")}function updateStationFilters(){let e=document.getElementById("baseStationIdInput").value;!(e=e.toUpperCase())||7<e.length||!/^[A-Za-z0-9]+$/.test(e)?showToast("Base Station ID must be up to 7 letters or digits.","error"):e?globalFetch("/find_station?basestation_id="+e).then(e=>{e.error?showToast(e.error,"error"):(currentFilters.lat=e.latitude,currentFilters.lng=e.longitude,fetchStations())}).catch(e=>{}):showToast("Base Station ID is required","error")}function addRing(e,t,n,a){L.circle([e,t],{color:a,fillColor:a,fillOpacity:0,radius:n}).addTo(mymap)}function addRingsForLocation(e,t){var n=frequencyRanges[currentBand];addRing(e,t,n[0],"green"),addRing(e,t,n[1],"yellow"),addRing(e,t,n[2],"orange"),addRing(e,t,n[3],"red")}function clearRings(){mymap.eachLayer(function(e){e instanceof L.Circle&&mymap.removeLayer(e)})}function changeFrequency(e){var t="column-"+e;null===currentFilters.lat||null===currentFilters.lng?showToast("Please submit your location before changing the frequency.","error"):(document.querySelectorAll("th, td").forEach(e=>{e.classList.remove("highlighted-column")}),document.querySelectorAll("."+t).forEach(e=>{e.classList.add("highlighted-column")}),currentBand=e,clearRings(),addRingsForLocation(currentFilters.lat,currentFilters.lng,currentBand))}function getFrequencyColorForDistance(e,t){var n=1e3*t;let a;a=["5G3600","LTE2600","5G2600"].includes(e)?"high":["5G2100","LTE2100","5G1800","LTE1800"].includes(e)?"mid":"low";var r=frequencyRanges[a];for(let e=0;e<r.length;e++)if(n<=r[e])return frequencyRangecolors[e];return"red"}function applyFrequencyColors(){document.querySelectorAll(".sidebar-item").forEach(e=>{let i=null;e.querySelectorAll("p").forEach(e=>{e.textContent.includes("Distance:")&&(e=e.textContent.match(/Distance:\s*(\d+\.?\d*)km/))&&(i=parseFloat(e[1]))}),null!==i&&e.querySelectorAll("p").forEach(r=>{if(r.textContent.includes("Frequency Bands:")){const o=r.textContent.split("Frequency Bands:")[1].trim().split(",");r.innerHTML="<b>Frequency Bands:</b> ",o.forEach((e,t)=>{var n=getFrequencyColorForDistance(e.trim(),i),a=document.createElement("span");a.textContent=e.trim(),a.className=`text-${n}-600`,r.appendChild(a),t<o.length-1&&(r.innerHTML+=", ")})}})})}function applyFrequencyColorsToTooltipContent(e,t){var n,a;return t||(n=e.match(/<b>Distance:<\/b>\s*(\d+\.?\d*)km/))&&(t=parseFloat(n[1])),t&&(n=e.match(/<b>Frequency Bands:<\/b>\s*([^<]+)/))&&n[1]&&(a=n[1].split(",").map(e=>e.trim()).map(e=>{return`<span class="text-${getFrequencyColorForDistance(e,t)}-600">${e}</span>`}).join(", "),e=e.replace(n[0],"<b>Frequency Bands:</b> "+a)),e}filterControl.onAdd=function(e){var t=L.DomUtil.create("div","filter-control-container");return t.innerHTML=`
        <button id="toggle-filters-btn" class="bg-blue-500 hover:bg-blue-700 dark:bg-gray-800 dark:hover:bg-gray-500 text-white dark:text-white font-bold py-1 px-2 rounded w-76">
        Toggle Filters
        </button>

        <button id="reset-filters-btn" class="bg-blue-500 hover:bg-blue-700 dark:bg-gray-800 dark:hover:bg-gray-500 text-white dark:text-white font-bold py-1 px-2 rounded w-76">
        Reset Filters
        </button>

        <div id="filterContainer" class="bg-white p-1 rounded shadow text-black dark:bg-black dark:text-white w-76 accent-blue-500 dark:accent-gray-400 hidden">
            <div class="static-content">
                <div class="my-2">
                    <p class="text-gray-700 font-bold dark:text-white">Service Provider:</p>
                    <div class="flex flex-wrap label-container gap-1">    
                        <label><input type="checkbox" name="service_provider" value="P4 Sp. z o.o.'"> Play</label>
                        <label><input type="checkbox" name="service_provider" value="Orange Polska S.A."> Orange</label>
                        <label><input type="checkbox" name="service_provider" value="T-Mobile Polska S.A."> T-Mobile</label>
                        <label><input type="checkbox" name="service_provider" value="POLKOMTEL Sp. z o.o."> Plus</label>
                        <label><input type="checkbox" name="service_provider" value="AERO 2 Sp. z o.o."> Aero 2</label>
                    </div>
                </div>

                <div class="my-2">
                    <p class="text-gray-700 font-bold dark:text-white">Frequency:</p>
                    <div class="grid grid-cols-2 md:grid-cols-3 gap-1">
                        <label><input type="checkbox" name="frequency_bands" value="5G3600"> 5G3600</label>
                        <label><input type="checkbox" name="frequency_bands" value="5G2100"> 5G2100</label>
                        <label><input type="checkbox" name="frequency_bands" value="5G1800"> 5G1800</label>
                        <label><input type="checkbox" name="frequency_bands" value="LTE2600"> LTE2600</label>
                        <label><input type="checkbox" name="frequency_bands" value="LTE2100"> LTE2100</label>
                        <label><input type="checkbox" name="frequency_bands" value="LTE1800"> LTE1800</label>
                        <label><input type="checkbox" name="frequency_bands" value="LTE900"> LTE900</label>
                        <label><input type="checkbox" name="frequency_bands" value="LTE800"> LTE800</label>
                        <label><input type="checkbox" name="frequency_bands" value="GSM900"> GSM900</label>
                    </div>
                </div>

                <button id="apply-filters" class="apply-filters-btn mt-2 w-full text-white bg-blue-300 dark:bg-gray-700 hover:bg-blue-500 dark:hover:bg-gray-500 rounded">
                    Apply Filters
                </button>

                <div class="slider-container my-2">
                    <div class="flex justify-between items-center">
                        <button id="showNearestBtn" class="mt-2 w-48 text-white bg-blue-300 dark:bg-gray-700 hover:bg-blue-500 dark:hover:bg-gray-500 rounded">Show Nearest BTS</button>
                    </div>
                    <input type="number" id="nearestBtsRange" min="1" max="10" placeholder="" class="w-[4.25rem] mt-1 bg-blue-100 hover:bg-blue-300 dark:bg-gray-700 dark:hover:bg-gray-500">
                </div>

                <div class="slider-container my-2">
                    <div class="flex justify-between items-center">
                        <button id="showWithinDistanceBtn" class="mt-2 w-48 text-white bg-blue-300 dark:bg-gray-700 hover:bg-blue-500 dark:hover:bg-gray-500 rounded">Show BTS Within Distance</button>
                    </div>
                    <input type="number" id="withinDistanceRange" min="0.0" max="10" step="0.1" placeholder="" class="w-[4.25rem] mt-1 bg-blue-100 hover:bg-blue-300 dark:bg-gray-700 dark:hover:bg-gray-500">
                </div>

                <div id="dynamicContent">
                
                </div>
            </div> 
        </div>
        
    `,L.DomEvent.disableClickPropagation(t),L.DomEvent.on(t,"mousewheel",L.DomEvent.stopPropagation),t},filterControl.addTo(mymap),document.getElementById("toggle-filters-btn").addEventListener("click",function(){document.getElementById("filterContainer").classList.toggle("hidden")}),document.getElementById("reset-filters-btn").addEventListener("click",resetFiltersUI),document.getElementById("apply-filters").addEventListener("click",function(){var e=Array.from(document.querySelectorAll('input[name="frequency_bands"]:checked')).map(e=>e.value),t=Array.from(document.querySelectorAll('input[name="service_provider"]:checked')).map(e=>e.value);currentFilters.serviceProvider=t,currentFilters.frequencyBands=e,currentFilters.nearestBts=document.getElementById("nearestBtsRange").value,currentFilters.distance=document.getElementById("withinDistanceRange").value,currentFilters.mode="all",checkAndSetInitialLocation(),fetchStations()}),setTimeout(()=>{document.getElementById("showNearestBtn").addEventListener("click",function(){currentFilters.mode="nearest",currentFilters.limit=nearestBtsRange.value,checkAndSetInitialLocation(),fetchStations()}),document.getElementById("showWithinDistanceBtn").addEventListener("click",function(){currentFilters.mode="withinDistance",currentFilters.maxDistance=withinDistanceRange.value,checkAndSetInitialLocation(),fetchStations()})},0),document.addEventListener("DOMContentLoaded",function(){var e=document.getElementById("nearestBtsRange"),t=document.getElementById("withinDistanceRange");function n(e,n=!1){e.addEventListener("input",function(){var e,t;this.value.match(n?/^\d+$/:/^\d*\.?\d?$/)?(e=n?parseInt(this.value,10):parseFloat(this.value),(t=parseFloat(this.max))<e?this.value=t.toString():e===t&&this.value.endsWith(".0")?this.value=this.value.slice(0,-2):this.value=!n&&e<=0||n&&e<1?n?"1":"0.1":n?e.toString():e.toFixed(1)):this.value=this.value.slice(0,-1)})}n(e,!0),n(t),e.setAttribute("placeholder","1-10"),t.setAttribute("placeholder","0.1-10")}),document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("dynamicContent");function t(n,a,r){e.addEventListener("change",function(e){var t;e.target.matches(n)&&(e=e.target,t=parseFloat(e.value),e.value=(t<a?a:r<t?r:parseFloat(e.value)).toFixed(3))})}t("#latitudeInput",48,58),t("#longitudeInput",13.5,24.5)}),document.getElementById("dynamicContent").addEventListener("click",function(e){"submitCoords"===e.target.id&&updateLatLngFilters()}),document.addEventListener("click",function(e){"submitfilteredstation"===e.target.id&&updateStationFilters()}),document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".column-low").forEach(e=>{e.classList.add("highlighted-column")})});
//# sourceMappingURL=ui-interactions.min.js.map